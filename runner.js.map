{"version":3,"sources":["config.ts","runner.ts"],"names":[],"mappings":"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","file":"runner.js","sourceRoot":"../src","sourcesContent":["\nexport const runner = {\n    hostname: '127.0.0.1',\n    port: 3003,\n}","import http from 'http';\nconst puppeteer = require('puppeteer');\nimport { runner } from './config'\n\nconst { hostname, port } = runner;\n\nlet browser;\n\nconst runBrowser = async () => {\n    console.log('launch browser')\n    browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto('http://localhost:1234');\n}\n\nconst server = http.createServer(async (req, res) => {\n    const urlParts = req.url?.split(/\\//g);\n    const action = urlParts[1];\n    const param = urlParts[2];\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    if (action === 'log') {\n        const buffers = [];\n\n        for await (const chunk of req) {\n          buffers.push(chunk);\n        }\n      \n        const dataStr = Buffer.concat(buffers).toString();\n        const data = dataStr[0] === '{' ? JSON.parse(dataStr) : dataStr;\n      \n        console.log(data); \n    }\n    if (action === 'exit') {\n        await browser.close();\n        server.close();\n        process.exit(param === 'fail' ? 1 : 0);\n    }\n    res.end('OK');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\nrunBrowser();\n"]}